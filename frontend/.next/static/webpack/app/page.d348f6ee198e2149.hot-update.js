"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/todo-grpc.service.ts":
/*!*******************************************!*\
  !*** ./src/services/todo-grpc.service.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TodoGrpcService: function() { return /* binding */ TodoGrpcService; }\n/* harmony export */ });\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @improbable-eng/grpc-web */ \"(app-pages-browser)/./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js\");\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _generated_todo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/todo */ \"(app-pages-browser)/./src/generated/todo.ts\");\n\n\nclass TodoGrpcServiceImpl {\n    async getTodos() {\n        try {\n            console.log(\"Testing connectivity to Envoy...\");\n            // First test basic HTTP connectivity\n            const testResponse = await fetch(\"http://localhost:8081/\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            console.log(\"HTTP test response status:\", testResponse.status);\n            console.log(\"Making gRPC request to getTodos...\");\n            const request = {};\n            const response = await this.client.GetTodos(request);\n            console.log(\"gRPC response received:\", response);\n            return response.todos || [];\n        } catch (error) {\n            console.error(\"Failed to get todos:\", error);\n            throw new Error(\"Failed to load todos. Please check your connection and try again.\");\n        }\n    }\n    async createTodo(description) {\n        try {\n            const trimmed = description.trim();\n            if (!trimmed) {\n                throw new Error(\"Description cannot be empty\");\n            }\n            const request = {\n                description: trimmed\n            };\n            const response = await this.client.CreateTodo(request);\n            if (!response.todo) {\n                throw new Error(\"Invalid response from server\");\n            }\n            return response.todo;\n        } catch (error) {\n            console.error(\"Failed to create todo:\", error);\n            if (error instanceof Error && error.message.includes(\"empty\")) {\n                throw error;\n            }\n            throw new Error(\"Failed to create todo. Please try again.\");\n        }\n    }\n    async updateTodo(id, updates) {\n        try {\n            if (!id || id <= 0) {\n                throw new Error(\"Invalid todo ID\");\n            }\n            if (updates.description !== undefined && !updates.description.trim()) {\n                throw new Error(\"Description cannot be empty\");\n            }\n            const request = {\n                id,\n                ...updates\n            };\n            const response = await this.client.UpdateTodo(request);\n            if (!response.todo) {\n                throw new Error(\"Invalid response from server\");\n            }\n            return response.todo;\n        } catch (error) {\n            console.error(\"Failed to update todo:\", error);\n            if (error instanceof Error && error.message.includes(\"empty\")) {\n                throw error;\n            }\n            throw new Error(\"Failed to update todo. Please try again.\");\n        }\n    }\n    async deleteTodo(id) {\n        try {\n            if (!id || id <= 0) {\n                throw new Error(\"Invalid todo ID\");\n            }\n            const request = {\n                id\n            };\n            await this.client.DeleteTodo(request);\n        } catch (error) {\n            console.error(\"Failed to delete todo:\", error);\n            throw new Error(\"Failed to delete todo. Please try again.\");\n        }\n    }\n    constructor(){\n        const grpcUrl = \"http://localhost:8080\" || 0;\n        console.log(\"Initializing gRPC client with URL:\", grpcUrl);\n        const rpc = new _generated_todo__WEBPACK_IMPORTED_MODULE_1__.GrpcWebImpl(grpcUrl, {\n            transport: _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__.grpc.CrossBrowserHttpTransport({\n                withCredentials: false\n            })\n        });\n        this.client = new _generated_todo__WEBPACK_IMPORTED_MODULE_1__.TodoServiceClientImpl(rpc);\n    }\n}\n// Export singleton instance\nconst TodoGrpcService = new TodoGrpcServiceImpl();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/todo-grpc.service.ts\n"));

/***/ })

});