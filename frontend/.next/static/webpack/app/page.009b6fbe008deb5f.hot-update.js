"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/todo-grpc.service.ts":
/*!*******************************************!*\
  !*** ./src/services/todo-grpc.service.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TodoGrpcService: function() { return /* binding */ TodoGrpcService; }\n/* harmony export */ });\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @improbable-eng/grpc-web */ \"(app-pages-browser)/./node_modules/@improbable-eng/grpc-web/dist/grpc-web-client.umd.js\");\n/* harmony import */ var _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _generated_todo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generated/todo */ \"(app-pages-browser)/./src/generated/todo.ts\");\n\n\nclass TodoGrpcServiceImpl {\n    async getTodos() {\n        try {\n            console.log(\"Testing connectivity to Envoy...\");\n            // First test basic HTTP connectivity\n            const testResponse = await fetch(\"http://localhost:8081/\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            console.log(\"HTTP test response status:\", testResponse.status);\n            console.log(\"Testing gRPC-Web endpoint directly...\");\n            // Test the actual gRPC endpoint\n            const grpcResponse = await fetch(\"http://localhost:8081/todo.TodoService/GetTodos\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/grpc-web+proto\",\n                    \"x-grpc-web\": \"1\"\n                },\n                body: new Uint8Array([]) // Empty request body for GetTodos\n            });\n            console.log(\"Direct gRPC-Web test response status:\", grpcResponse.status);\n            console.log(\"Making gRPC request to getTodos...\");\n            const request = {};\n            const response = await this.client.GetTodos(request);\n            console.log(\"gRPC response received:\", response);\n            return response.todos || [];\n        } catch (error) {\n            console.error(\"Failed to get todos:\", error);\n            throw new Error(\"Failed to load todos. Please check your connection and try again.\");\n        }\n    }\n    async createTodo(description) {\n        try {\n            const trimmed = description.trim();\n            if (!trimmed) {\n                throw new Error(\"Description cannot be empty\");\n            }\n            const request = {\n                description: trimmed\n            };\n            const response = await this.client.CreateTodo(request);\n            if (!response.todo) {\n                throw new Error(\"Invalid response from server\");\n            }\n            return response.todo;\n        } catch (error) {\n            console.error(\"Failed to create todo:\", error);\n            if (error instanceof Error && error.message.includes(\"empty\")) {\n                throw error;\n            }\n            throw new Error(\"Failed to create todo. Please try again.\");\n        }\n    }\n    async updateTodo(id, updates) {\n        try {\n            if (!id || id <= 0) {\n                throw new Error(\"Invalid todo ID\");\n            }\n            if (updates.description !== undefined && !updates.description.trim()) {\n                throw new Error(\"Description cannot be empty\");\n            }\n            const request = {\n                id,\n                ...updates\n            };\n            const response = await this.client.UpdateTodo(request);\n            if (!response.todo) {\n                throw new Error(\"Invalid response from server\");\n            }\n            return response.todo;\n        } catch (error) {\n            console.error(\"Failed to update todo:\", error);\n            if (error instanceof Error && error.message.includes(\"empty\")) {\n                throw error;\n            }\n            throw new Error(\"Failed to update todo. Please try again.\");\n        }\n    }\n    async deleteTodo(id) {\n        try {\n            if (!id || id <= 0) {\n                throw new Error(\"Invalid todo ID\");\n            }\n            const request = {\n                id\n            };\n            await this.client.DeleteTodo(request);\n        } catch (error) {\n            console.error(\"Failed to delete todo:\", error);\n            throw new Error(\"Failed to delete todo. Please try again.\");\n        }\n    }\n    constructor(){\n        const grpcUrl = \"http://localhost:8080\" || 0;\n        console.log(\"Initializing gRPC client with URL:\", grpcUrl);\n        const rpc = new _generated_todo__WEBPACK_IMPORTED_MODULE_1__.GrpcWebImpl(grpcUrl, {\n            transport: _improbable_eng_grpc_web__WEBPACK_IMPORTED_MODULE_0__.grpc.CrossBrowserHttpTransport({\n                withCredentials: false\n            })\n        });\n        this.client = new _generated_todo__WEBPACK_IMPORTED_MODULE_1__.TodoServiceClientImpl(rpc);\n    }\n}\n// Export singleton instance\nconst TodoGrpcService = new TodoGrpcServiceImpl();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy90b2RvLWdycGMuc2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBU3JCO0FBUzNCLE1BQU1HO0lBbUJKLE1BQU1DLFdBQTRCO1FBQ2hDLElBQUk7WUFDRkMsUUFBUUMsR0FBRyxDQUFDO1lBQ1oscUNBQXFDO1lBQ3JDLE1BQU1DLGVBQWUsTUFBTUMsTUFBTSwwQkFBMEI7Z0JBQ3pEQyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7WUFDRjtZQUNBTCxRQUFRQyxHQUFHLENBQUMsOEJBQThCQyxhQUFhSSxNQUFNO1lBRTdETixRQUFRQyxHQUFHLENBQUM7WUFDWixnQ0FBZ0M7WUFDaEMsTUFBTU0sZUFBZSxNQUFNSixNQUFNLG1EQUFtRDtnQkFDbEZDLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO29CQUNoQixjQUFjO2dCQUNoQjtnQkFDQUcsTUFBTSxJQUFJQyxXQUFXLEVBQUUsRUFBRSxrQ0FBa0M7WUFDN0Q7WUFDQVQsUUFBUUMsR0FBRyxDQUFDLHlDQUF5Q00sYUFBYUQsTUFBTTtZQUV4RU4sUUFBUUMsR0FBRyxDQUFDO1lBQ1osTUFBTVMsVUFBMkIsQ0FBQztZQUNsQyxNQUFNQyxXQUFXLE1BQU0sSUFBSSxDQUFDQyxNQUFNLENBQUNDLFFBQVEsQ0FBQ0g7WUFDNUNWLFFBQVFDLEdBQUcsQ0FBQywyQkFBMkJVO1lBQ3ZDLE9BQU9BLFNBQVNHLEtBQUssSUFBSSxFQUFFO1FBQzdCLEVBQUUsT0FBT0MsT0FBTztZQUNkZixRQUFRZSxLQUFLLENBQUMsd0JBQXdCQTtZQUN0QyxNQUFNLElBQUlDLE1BQU07UUFDbEI7SUFDRjtJQUVBLE1BQU1DLFdBQVdDLFdBQW1CLEVBQWlCO1FBQ25ELElBQUk7WUFDRixNQUFNQyxVQUFVRCxZQUFZRSxJQUFJO1lBQ2hDLElBQUksQ0FBQ0QsU0FBUztnQkFDWixNQUFNLElBQUlILE1BQU07WUFDbEI7WUFFQSxNQUFNTixVQUE2QjtnQkFDakNRLGFBQWFDO1lBQ2Y7WUFFQSxNQUFNUixXQUFXLE1BQU0sSUFBSSxDQUFDQyxNQUFNLENBQUNTLFVBQVUsQ0FBQ1g7WUFDOUMsSUFBSSxDQUFDQyxTQUFTVyxJQUFJLEVBQUU7Z0JBQ2xCLE1BQU0sSUFBSU4sTUFBTTtZQUNsQjtZQUVBLE9BQU9MLFNBQVNXLElBQUk7UUFDdEIsRUFBRSxPQUFPUCxPQUFPO1lBQ2RmLFFBQVFlLEtBQUssQ0FBQywwQkFBMEJBO1lBQ3hDLElBQUlBLGlCQUFpQkMsU0FBU0QsTUFBTVEsT0FBTyxDQUFDQyxRQUFRLENBQUMsVUFBVTtnQkFDN0QsTUFBTVQ7WUFDUjtZQUNBLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtJQUNGO0lBRUEsTUFBTVMsV0FDSkMsRUFBVSxFQUNWQyxPQUFzRCxFQUN2QztRQUNmLElBQUk7WUFDRixJQUFJLENBQUNELE1BQU1BLE1BQU0sR0FBRztnQkFDbEIsTUFBTSxJQUFJVixNQUFNO1lBQ2xCO1lBRUEsSUFBSVcsUUFBUVQsV0FBVyxLQUFLVSxhQUFhLENBQUNELFFBQVFULFdBQVcsQ0FBQ0UsSUFBSSxJQUFJO2dCQUNwRSxNQUFNLElBQUlKLE1BQU07WUFDbEI7WUFFQSxNQUFNTixVQUE2QjtnQkFDakNnQjtnQkFDQSxHQUFHQyxPQUFPO1lBQ1o7WUFFQSxNQUFNaEIsV0FBVyxNQUFNLElBQUksQ0FBQ0MsTUFBTSxDQUFDaUIsVUFBVSxDQUFDbkI7WUFDOUMsSUFBSSxDQUFDQyxTQUFTVyxJQUFJLEVBQUU7Z0JBQ2xCLE1BQU0sSUFBSU4sTUFBTTtZQUNsQjtZQUVBLE9BQU9MLFNBQVNXLElBQUk7UUFDdEIsRUFBRSxPQUFPUCxPQUFPO1lBQ2RmLFFBQVFlLEtBQUssQ0FBQywwQkFBMEJBO1lBQ3hDLElBQUlBLGlCQUFpQkMsU0FBU0QsTUFBTVEsT0FBTyxDQUFDQyxRQUFRLENBQUMsVUFBVTtnQkFDN0QsTUFBTVQ7WUFDUjtZQUNBLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtJQUNGO0lBRUEsTUFBTWMsV0FBV0osRUFBVSxFQUFpQjtRQUMxQyxJQUFJO1lBQ0YsSUFBSSxDQUFDQSxNQUFNQSxNQUFNLEdBQUc7Z0JBQ2xCLE1BQU0sSUFBSVYsTUFBTTtZQUNsQjtZQUVBLE1BQU1OLFVBQTZCO2dCQUNqQ2dCO1lBQ0Y7WUFFQSxNQUFNLElBQUksQ0FBQ2QsTUFBTSxDQUFDbUIsVUFBVSxDQUFDckI7UUFDL0IsRUFBRSxPQUFPSyxPQUFPO1lBQ2RmLFFBQVFlLEtBQUssQ0FBQywwQkFBMEJBO1lBQ3hDLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtJQUNGO0lBN0hBZ0IsYUFBYztRQUNaLE1BQU1DLFVBQVVDLHVCQUFnQyxJQUFJLENBQXVCO1FBQzNFbEMsUUFBUUMsR0FBRyxDQUFDLHNDQUFzQ2dDO1FBRWxELE1BQU1JLE1BQU0sSUFBSXhDLHdEQUFXQSxDQUN6Qm9DLFNBQ0E7WUFDRUssV0FBVzNDLDBEQUFJQSxDQUFDNEMseUJBQXlCLENBQUM7Z0JBQ3hDQyxpQkFBaUI7WUFDbkI7UUFDRjtRQUdGLElBQUksQ0FBQzVCLE1BQU0sR0FBRyxJQUFJaEIsa0VBQXFCQSxDQUFDeUM7SUFDMUM7QUFnSEY7QUFFQSw0QkFBNEI7QUFDckIsTUFBTUksa0JBQWtCLElBQUkzQyxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL3RvZG8tZ3JwYy5zZXJ2aWNlLnRzPzc3MGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JwYyB9IGZyb20gXCJAaW1wcm9iYWJsZS1lbmcvZ3JwYy13ZWJcIjtcbmltcG9ydCB7XG4gIFRvZG9TZXJ2aWNlQ2xpZW50SW1wbCxcbiAgR3JwY1dlYkltcGwsXG4gIEdldFRvZG9zUmVxdWVzdCxcbiAgQ3JlYXRlVG9kb1JlcXVlc3QsXG4gIFVwZGF0ZVRvZG9SZXF1ZXN0LFxuICBEZWxldGVUb2RvUmVxdWVzdCxcbiAgVG9kbyxcbn0gZnJvbSBcIi4uL2dlbmVyYXRlZC90b2RvXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9kb0dycGNDbGllbnRJbnRlcmZhY2Uge1xuICBnZXRUb2RvcygpOiBQcm9taXNlPFRvZG9bXT47XG4gIGNyZWF0ZVRvZG8oZGVzY3JpcHRpb246IHN0cmluZyk6IFByb21pc2U8VG9kbz47XG4gIHVwZGF0ZVRvZG8oaWQ6IG51bWJlciwgdXBkYXRlczogeyBkZXNjcmlwdGlvbj86IHN0cmluZzsgY29tcGxldGVkPzogYm9vbGVhbiB9KTogUHJvbWlzZTxUb2RvPjtcbiAgZGVsZXRlVG9kbyhpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPjtcbn1cblxuY2xhc3MgVG9kb0dycGNTZXJ2aWNlSW1wbCBpbXBsZW1lbnRzIFRvZG9HcnBjQ2xpZW50SW50ZXJmYWNlIHtcbiAgcHJpdmF0ZSBjbGllbnQ6IFRvZG9TZXJ2aWNlQ2xpZW50SW1wbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBncnBjVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR1JQQ19VUkwgfHwgXCJodHRwOi8vbG9jYWxob3N0OjgwODFcIjtcbiAgICBjb25zb2xlLmxvZyhcIkluaXRpYWxpemluZyBnUlBDIGNsaWVudCB3aXRoIFVSTDpcIiwgZ3JwY1VybCk7XG5cbiAgICBjb25zdCBycGMgPSBuZXcgR3JwY1dlYkltcGwoXG4gICAgICBncnBjVXJsLFxuICAgICAge1xuICAgICAgICB0cmFuc3BvcnQ6IGdycGMuQ3Jvc3NCcm93c2VySHR0cFRyYW5zcG9ydCh7XG4gICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiBmYWxzZSxcbiAgICAgICAgfSksXG4gICAgICB9XG4gICAgKTtcblxuICAgIHRoaXMuY2xpZW50ID0gbmV3IFRvZG9TZXJ2aWNlQ2xpZW50SW1wbChycGMpO1xuICB9XG5cbiAgYXN5bmMgZ2V0VG9kb3MoKTogUHJvbWlzZTxUb2RvW10+IHtcbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coXCJUZXN0aW5nIGNvbm5lY3Rpdml0eSB0byBFbnZveS4uLlwiKTtcbiAgICAgIC8vIEZpcnN0IHRlc3QgYmFzaWMgSFRUUCBjb25uZWN0aXZpdHlcbiAgICAgIGNvbnN0IHRlc3RSZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDgxL1wiLCB7XG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uc29sZS5sb2coXCJIVFRQIHRlc3QgcmVzcG9uc2Ugc3RhdHVzOlwiLCB0ZXN0UmVzcG9uc2Uuc3RhdHVzKTtcblxuICAgICAgY29uc29sZS5sb2coXCJUZXN0aW5nIGdSUEMtV2ViIGVuZHBvaW50IGRpcmVjdGx5Li4uXCIpO1xuICAgICAgLy8gVGVzdCB0aGUgYWN0dWFsIGdSUEMgZW5kcG9pbnRcbiAgICAgIGNvbnN0IGdycGNSZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDgxL3RvZG8uVG9kb1NlcnZpY2UvR2V0VG9kb3NcIiwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9ncnBjLXdlYitwcm90b1wiLFxuICAgICAgICAgIFwieC1ncnBjLXdlYlwiOiBcIjFcIlxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBuZXcgVWludDhBcnJheShbXSkgLy8gRW1wdHkgcmVxdWVzdCBib2R5IGZvciBHZXRUb2Rvc1xuICAgICAgfSk7XG4gICAgICBjb25zb2xlLmxvZyhcIkRpcmVjdCBnUlBDLVdlYiB0ZXN0IHJlc3BvbnNlIHN0YXR1czpcIiwgZ3JwY1Jlc3BvbnNlLnN0YXR1cyk7XG5cbiAgICAgIGNvbnNvbGUubG9nKFwiTWFraW5nIGdSUEMgcmVxdWVzdCB0byBnZXRUb2Rvcy4uLlwiKTtcbiAgICAgIGNvbnN0IHJlcXVlc3Q6IEdldFRvZG9zUmVxdWVzdCA9IHt9O1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudC5HZXRUb2RvcyhyZXF1ZXN0KTtcbiAgICAgIGNvbnNvbGUubG9nKFwiZ1JQQyByZXNwb25zZSByZWNlaXZlZDpcIiwgcmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLnRvZG9zIHx8IFtdO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGdldCB0b2RvczpcIiwgZXJyb3IpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGxvYWQgdG9kb3MuIFBsZWFzZSBjaGVjayB5b3VyIGNvbm5lY3Rpb24gYW5kIHRyeSBhZ2Fpbi5cIik7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgY3JlYXRlVG9kbyhkZXNjcmlwdGlvbjogc3RyaW5nKTogUHJvbWlzZTxUb2RvPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHRyaW1tZWQgPSBkZXNjcmlwdGlvbi50cmltKCk7XG4gICAgICBpZiAoIXRyaW1tZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGVzY3JpcHRpb24gY2Fubm90IGJlIGVtcHR5XCIpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXF1ZXN0OiBDcmVhdGVUb2RvUmVxdWVzdCA9IHtcbiAgICAgICAgZGVzY3JpcHRpb246IHRyaW1tZWQsXG4gICAgICB9O1xuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50LkNyZWF0ZVRvZG8ocmVxdWVzdCk7XG4gICAgICBpZiAoIXJlc3BvbnNlLnRvZG8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByZXNwb25zZSBmcm9tIHNlcnZlclwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3BvbnNlLnRvZG87XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gY3JlYXRlIHRvZG86XCIsIGVycm9yKTtcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yICYmIGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoXCJlbXB0eVwiKSkge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBjcmVhdGUgdG9kby4gUGxlYXNlIHRyeSBhZ2Fpbi5cIik7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgdXBkYXRlVG9kbyhcbiAgICBpZDogbnVtYmVyLFxuICAgIHVwZGF0ZXM6IHsgZGVzY3JpcHRpb24/OiBzdHJpbmc7IGNvbXBsZXRlZD86IGJvb2xlYW4gfVxuICApOiBQcm9taXNlPFRvZG8+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFpZCB8fCBpZCA8PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdG9kbyBJRFwiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHVwZGF0ZXMuZGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZCAmJiAhdXBkYXRlcy5kZXNjcmlwdGlvbi50cmltKCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGVzY3JpcHRpb24gY2Fubm90IGJlIGVtcHR5XCIpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXF1ZXN0OiBVcGRhdGVUb2RvUmVxdWVzdCA9IHtcbiAgICAgICAgaWQsXG4gICAgICAgIC4uLnVwZGF0ZXMsXG4gICAgICB9O1xuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2xpZW50LlVwZGF0ZVRvZG8ocmVxdWVzdCk7XG4gICAgICBpZiAoIXJlc3BvbnNlLnRvZG8pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByZXNwb25zZSBmcm9tIHNlcnZlclwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3BvbnNlLnRvZG87XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gdXBkYXRlIHRvZG86XCIsIGVycm9yKTtcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yICYmIGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoXCJlbXB0eVwiKSkge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byB1cGRhdGUgdG9kby4gUGxlYXNlIHRyeSBhZ2Fpbi5cIik7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZGVsZXRlVG9kbyhpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghaWQgfHwgaWQgPD0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHRvZG8gSURcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlcXVlc3Q6IERlbGV0ZVRvZG9SZXF1ZXN0ID0ge1xuICAgICAgICBpZCxcbiAgICAgIH07XG5cbiAgICAgIGF3YWl0IHRoaXMuY2xpZW50LkRlbGV0ZVRvZG8ocmVxdWVzdCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZGVsZXRlIHRvZG86XCIsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBkZWxldGUgdG9kby4gUGxlYXNlIHRyeSBhZ2Fpbi5cIik7XG4gICAgfVxuICB9XG59XG5cbi8vIEV4cG9ydCBzaW5nbGV0b24gaW5zdGFuY2VcbmV4cG9ydCBjb25zdCBUb2RvR3JwY1NlcnZpY2UgPSBuZXcgVG9kb0dycGNTZXJ2aWNlSW1wbCgpO1xuXG4vLyBFeHBvcnQgaW50ZXJmYWNlIGZvciB0ZXN0aW5nXG5leHBvcnQgdHlwZSB7IFRvZG9HcnBjQ2xpZW50SW50ZXJmYWNlIH07Il0sIm5hbWVzIjpbImdycGMiLCJUb2RvU2VydmljZUNsaWVudEltcGwiLCJHcnBjV2ViSW1wbCIsIlRvZG9HcnBjU2VydmljZUltcGwiLCJnZXRUb2RvcyIsImNvbnNvbGUiLCJsb2ciLCJ0ZXN0UmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJzdGF0dXMiLCJncnBjUmVzcG9uc2UiLCJib2R5IiwiVWludDhBcnJheSIsInJlcXVlc3QiLCJyZXNwb25zZSIsImNsaWVudCIsIkdldFRvZG9zIiwidG9kb3MiLCJlcnJvciIsIkVycm9yIiwiY3JlYXRlVG9kbyIsImRlc2NyaXB0aW9uIiwidHJpbW1lZCIsInRyaW0iLCJDcmVhdGVUb2RvIiwidG9kbyIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsInVwZGF0ZVRvZG8iLCJpZCIsInVwZGF0ZXMiLCJ1bmRlZmluZWQiLCJVcGRhdGVUb2RvIiwiZGVsZXRlVG9kbyIsIkRlbGV0ZVRvZG8iLCJjb25zdHJ1Y3RvciIsImdycGNVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfR1JQQ19VUkwiLCJycGMiLCJ0cmFuc3BvcnQiLCJDcm9zc0Jyb3dzZXJIdHRwVHJhbnNwb3J0Iiwid2l0aENyZWRlbnRpYWxzIiwiVG9kb0dycGNTZXJ2aWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/todo-grpc.service.ts\n"));

/***/ })

});